<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.8</version>
		<relativePath/>
	</parent>

	<groupId>com.digitalhouse.digitalmoney</groupId>
	<artifactId>config-server</artifactId>
	<version>1.0.0</version>
	<name>config-server</name>
	<description>Servidor de configuración centralizada para Digital Money House</description>

	<properties>
		<java.version>21</java.version>
		<!-- Versión de Spring Cloud compatible con Spring Boot 3.2.8 -->
		<spring-cloud.version>2023.0.3</spring-cloud.version>
	</properties>

	<dependencies>
		<!-- Spring Boot Starter básico -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<!-- DEPENDENCIA CRÍTICA: Config Server -->
		<!-- Esta es la dependencia principal que convierte tu aplicación en un Config Server -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-server</artifactId>
		</dependency>

		<!-- Spring Boot Web - necesario para exponer endpoints REST -->
		<!-- El Config Server sirve configuraciones a través de endpoints HTTP -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring Boot Actuator para monitoring y health checks -->
		<!-- Permite verificar el estado del Config Server y obtener métricas -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Spring Security (opcional pero recomendado) -->
		<!-- Protege los endpoints de configuración con autenticación básica -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- Spring Boot DevTools para desarrollo -->
		<!-- Permite hot reloading durante desarrollo del Config Server -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- Testing dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Spring Cloud Contract para testing de contratos (opcional) -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-contract-stub-runner</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- Gestión de dependencias de Spring Cloud -->
	<!-- Este bloque asegura compatibilidad entre Spring Boot y Spring Cloud -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<!-- Plugin de Spring Boot para crear ejecutables -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!-- Configuración para excluir DevTools del JAR final -->
					<excludes>
						<exclude>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-devtools</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Plugin para análisis de código (opcional pero recomendado) -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.8</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
